float hash( vec2 p )
{
	float h = dot(p,vec2(127.1,311.7));
	
    return -1.0 + 2.0*fract(sin(h)*43758.5453123);
}

float noise( in vec2 p )
{
    vec2 i = floor( p );
    vec2 f = fract( p );
	
	vec2 u = f*f*(3.0-2.0*f);

    return mix( mix( hash( i + vec2(0.0,0.0) ), 
                     hash( i + vec2(1.0,0.0) ), u.x),
                mix( hash( i + vec2(0.0,1.0) ), 
                     hash( i + vec2(1.0,1.0) ), u.x), u.y);
}

mat2 m = mat2(0.8, 0.6, -0.6, 0.8);

float fbm(vec2 p) {
	float f = 0.0;
	f += 0.5000 * noise(p); p *= m*2.02;
	f += 0.2500 * noise(p); p *= m*2.03;
	f += 0.1250 * noise(p); p *= m*2.01;
	f += 0.0625 * noise(p); p *= m*2.04;
	f /= 0.9375;
	return f;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	vec2 uv = fragCoord.xy / iResolution.xy;
	vec2 p = -1.0 + 2.0 * uv;
	
	float r1 = dot(p,p);
	float a1 = atan(p.y, p.x);
	float f1 = fbm(vec2(r1,50.0*a1));

	float w = length(vec2(0.5) - uv);
	f1 *= 1.3;
	f1 = clamp(f1, 0.0, 1.0);
	f1 *= w;
	
	fragColor = vec4(vec3(f1), 1.0);
}
